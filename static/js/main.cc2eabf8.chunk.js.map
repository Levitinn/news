{"version":3,"sources":["avatar.jpg","Component/View/NewsItem.js","Component/Pages/Main.js","Component/Pages/Contacts.js","Component/View/Menu.js","Component/View/Header.js","Component/View/Footer.js","Component/Pages/News.js","Component/View/NewsDetail.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","withRouter","props","itemHanlder","id","url","activeNews","allNews","filter","item","history","push","itemPath","onClick","className","title","href","source","data","substr","style","margin","display","Main","news","pieceNews","newsData","articles","slice","map","elem","index","key","name","publishedAt","description","Contacts","src","avatar","alt","exact","to","Header","Footer","News","console","log","redirect","urlToImage","App","useState","setActiveNews","setNewsData","useEffect","a","axios","get","response","fetchData","useFetch","path","component","NewsDetail","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cc2eabf8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.80c55388.jpg\";","import React from 'react';\nimport {withRouter} from 'react-router-dom'\n\nconst NewsItem = props => {\n    const itemPath = (id) => {\n        props.history.push('/news/news' + id)\n    }\n    const itemHanlder = (id, url) => {\n        // console.log()\n        props.activeNews(id =>{\n            const activeNews = props.allNews.filter(item => item.url ===url)\n            return activeNews\n        })\n\n        itemPath(id + 1)\n    }\n    // console.log(props.id)\n    return (\n        <div onClick={()=> itemHanlder(props.id, props.url)} className=\"news__item\">\n            <div className=\"news__title\">\n                {props.title}\n            </div>\n            <div className=\"new__info\">\n                <a href={props.url} className=\"info__target\">\n                    {props.source}\n                </a>\n                <div className=\"info__date\">\n                    <span className=\"date__date\">{props.data.substr(8,2)}</span>\n                    <span style={{margin: '0px 7px', display: 'inline-block'}}>/</span>\n                    <span className=\"date__months\">{props.data.substr(5,2)}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default withRouter(NewsItem);","import React from 'react';\nimport NewsItem from '../View/NewsItem'\n\nconst Main = props => {\n    let pieceNews = null\n    const cutNews = news => {\n        if (news) {\n            pieceNews = news.articles.slice(0,6)\n        }\n    }\n    cutNews(props.newsData)\n    return(\n        <div className=\"main__news\">\n            <h1 className=\"main__title\">\n                Всегда <br/>свежие <span className=\"blue-text\">новости</span>\n            </h1>\n            <div className=\"news__list\">\n                {pieceNews ? (\n                    pieceNews.map((elem, index) => {\n                    return <NewsItem \n                            key = {index}\n                            id = {index}\n                            title = {elem.title}\n                            source = {elem.source.name}\n                            data = {elem.publishedAt}\n                            url = {elem.url}\n                            description={elem.description}\n                            activeNews={props.activeNews}\n                            allNews={props.allNews}\n                            />\n                        })\n                    ) : null}\n            </div>\n            <a href=\"/\" className=\"news__subscribe blue-text\">\n                Быть в курсе событий\n            </a>\n        </div>\n    )\n}\n\nexport default Main;","import React from 'react';\nimport avatar from '../../avatar.jpg'\nconst Contacts = props => {\n\n    return(\n        <div className=\"contacts__block\">\n            <div className=\"contacts__info\">\n                <a className=\"contacts__tel blue-text\" href=\"tel:+79267696775\">+7 (926) 769 67 75</a>\n                <p className=\"contacts__fio\">\n                    Левитин <br/> Никита\n                </p>\n                <a className=\"contacts__mail\" href=\"mailto:levitinn@mail.ru\">\n                    levitinn@mail.ru\n                </a>\n                <span className=\"contacts__position\">\n                    JavaScript developer\n                </span>\n                <div className=\"contacts__skills\">\n                    <span>\n                        ES5\n                    </span>,\n                    <span>\n                        ES6\n                    </span>,\n                    <span className=\"blue-text\">\n                        React\n                    </span>\n                </div>\n            </div>\n            <div className=\"contacts__image\">\n                <img src={avatar} alt=\"Nikitushka\"/>\n            </div>\n        </div>\n    )\n}\n\nexport default Contacts;","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport {withRouter} from 'react-router-dom'\nconst Menu = props => {\n\n    return (\n        <ul className=\"header__menu\">\n            <li className=\"menu__item\">\n                <NavLink exact to=\"/\">\n                    Главная\n                </NavLink>\n            </li>\n            <li className=\"menu__item\">\n                <NavLink to=\"/news\">\n                    News\n                </NavLink>\n            </li> \n            <li className=\"menu__item\">\n                <NavLink exact to=\"/contacts\">\n                    Контакты\n                </NavLink>\n            </li>\n        </ul>\n    )\n}\n\nexport default withRouter(Menu);","import React from 'react';\nimport Menu from './Menu'\nconst Header = props => {\n\n    return (\n        <header className=\"header\">\n            <div className=\"container\">\n                <a className=\"header__logo\" href=\"/\">\n                    Новостник\n                </a>\n                <Menu />\n            </div>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\n\nconst Footer = props => {\n\n    return (\n        <footer className=\"footer\">\n            <div className=\"container\">\n                <div className=\"footer__logo\">\n                    <span className=\"logo__title\">\n                        Новостник\n                    </span>\n                    <span className=\"logo__subtitile\">\n                        Single Page Application\n                    </span>\n                </div>\n                <div className=\"footer__text\">\n                    Дипломный проект\n                </div>\n                <div className=\"footer__info\">\n                    <span className=\"info__made\">\n                        Made by\n                    </span>\n                    <span className=\"info__author\">\n                        Levitin Nikita\n                    </span>\n                </div>\n            </div>\n        </footer>\n    )\n}\nexport default Footer;","import React from 'react';\nimport NewsItem from '../View/NewsItem';\n\nconst News = props => {\n    console.log(props.newsData)\n    return(\n        <div className=\"news__block\">\n            <h2 className=\"main__title\">\n                Быть <br/> в курсе <span className=\"blue-text\">событий</span>\n            </h2>\n            <div className=\"news__list\">\n                {props.newsData ? (\n                    props.newsData.articles.map((elem, index)=> {\n                        return <NewsItem \n                            key = {index}\n                            id={index+1}\n                            title = {elem.title}\n                            source = {elem.source.name}\n                            data = {elem.publishedAt}\n                            url = {elem.url}\n                            activeNews={props.activeNews}\n                            allNews={props.allNews}\n                            />\n                        })\n                    \n                ) : null}\n            </div>\n        </div>\n    )\n}\n\nexport default News;","import React from 'react';\nimport {withRouter} from 'react-router-dom'\n\nconst NewsItem = props => {\n    console.log(props)\n    const redirect = data => !data ? (\n        props.history.push('/')\n    ) : (\n        <div className=\"news__detail\">\n            <div className=\"detail__info\">\n                <h2 className=\"detail__title\">\n                    {props.activeNews.title}\n                </h2>\n                <a href={props.activeNews.url} className=\"detail__source\">\n                    {props.activeNews.source.id}\n                </a>\n                <div className=\"info__date detail__date\">\n                    <span className=\"date__date\">{props.activeNews.publishedAt.substr(8,2)}</span>\n                    <span style={{margin: '0px 7px', display: 'inline-block'}}>/</span>\n                    <span className=\"date__months\">{props.activeNews.publishedAt.substr(5,2)}</span>\n                </div>\n            </div>\n            <div className=\"detail__content\">\n                <div className=\"detail__image\">\n                    <img src={props.activeNews.urlToImage} alt=\"detail\" className=\"detail__img\"/>\n                </div>\n                <div className=\"detail__text\">\n                    {props.activeNews.description}\n                </div>\n            </div>\n        </div>\n    )\n    redirect(props.newsData)\n    return (\n       <> {redirect(props.newsData)}</>        \n    )\n}\nexport default withRouter(NewsItem);\n","import React, {useState, useEffect} from 'react';\nimport {Route} from 'react-router-dom';\nimport axios from 'axios';\n\nimport Main from './Component/Pages/Main'\nimport Contacts from './Component/Pages/Contacts'\nimport Header from './Component/View/Header'\nimport Footer from './Component/View/Footer'\nimport News from './Component/Pages/News'\nimport NewsDetail from './Component/View/NewsDetail'\nimport './App.css';\n\n\nconst useFetch = () => {\n\tconst [newsData, setNewsData] = useState(null);\n\tuseEffect(()=>{\n\t\tconst getUrl = 'https://newsapi.org/v2/top-headlines?' + \n\t\t\t\t\t'country=ru&' + \n\t\t\t\t\t'apiKey=020d306cb2d14c878ab3f56dc5b1fa2e';\n\n\t\tconst fetchData = async () => {\n\t\t\tconst response = await axios.get(getUrl)\n\t\t\tsetNewsData(response.data)\n\t\t}\n\t\tfetchData()\n\t},[])\n\treturn newsData\n}\n\nfunction App() {\n\tconst [activeNews, setActiveNews] = useState({})\n\tconst news = useFetch()\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t\n\t\t\t<Header />\n\t\t\t<div className=\"app-body\">\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<Route \n\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\tcomponent={()=> <Main newsData={news} allNews={news ? news.articles : null} activeNews={setActiveNews}/>}\n\t\t\t\t\t\texact\n\t\t\t\t\t/>\n\t\t\t\t\t<Route \n\t\t\t\t\t\tpath=\"/news\"\n\t\t\t\t\t\texact\n\t\t\t\t\t\tcomponent={()=> <News newsData={news} allNews={news ? news.articles : null} activeNews={setActiveNews}/>}\n\n\t\t\t\t\t/>\n\t\t\t\t\t<Route \n\t\t\t\t\t\tpath=\"/contacts\"\n\t\t\t\t\t\tcomponent={Contacts}\n\t\t\t\t\t\texact\n\t\t\t\t\t/>\n\t\t\t\t\t<Route \n\t\t\t\t\t\tpath=\"/news/:name\"\n\t\t\t\t\t\texact\n\t\t\t\t\t\tcomponent={()=> <NewsDetail activeNews={activeNews[0]} newsData={news}/>}\n\t\t\t\t\t/>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Footer />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}